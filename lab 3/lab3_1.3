{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Deep Learning Package From Lab2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [],
   "source": [
    "class NN:\n",
    "  def initialize_weights(shapes, outputs):\n",
    "    \"\"\"Initializes weights of model according to shape.\n",
    "\n",
    "        Args:\n",
    "          shapes = [784, 300, 10]\n",
    "          outputs = [\"relu\", \"sigmoid\"]\n",
    "        returns:\n",
    "          model with uniform random weights [-1,+1], zero bias and output function\n",
    "          [\n",
    "          [random(784, 300), zeros(300), \"relu\"]\n",
    "          [random(300, 10), zeros(10), \"sigmoid\"] \n",
    "        ]\n",
    "    \"\"\"\n",
    "    models = []\n",
    "    for i in range(len(shapes)):\n",
    "      if i is 0:\n",
    "        continue\n",
    "\n",
    "      models.append([\n",
    "        np.random.uniform(-1, 1, (shapes[i - 1], shapes[i])),\n",
    "        np.zeros(shapes[i]).reshape(1, shapes[i]),\n",
    "        outputs[i - 1]\n",
    "      ])\n",
    "\n",
    "    return models\n",
    "    \n",
    "  def relu(x):\n",
    "    \"\"\"Computes relu of function.\"\"\"\n",
    "    return np.maximum(0, x)\n",
    "\n",
    "  def sigmoid(x):\n",
    "    \"\"\"Computes sigmoid of function.\"\"\"\n",
    "    return 1 / np.maximum(1 + np.exp(-x), 1e-8)\n",
    "\n",
    "  def relu_derivative(z):\n",
    "    \"\"\"Computes derivative of relu of function.\"\"\"\n",
    "    z_copy = np.array(z, copy=True)\n",
    "    z_copy[z_copy <= 0] = 0\n",
    "    z_copy[z_copy > 0] = 1\n",
    "    return z_copy\n",
    "\n",
    "  def sigmoid_derivative(z):\n",
    "    \"\"\"Computes derivative of sigmoid of function.\"\"\"\n",
    "    sig = sigmoid(z)\n",
    "    return sig * (1 - sig)\n",
    "      \n",
    "  def activate(z, funcName):\n",
    "    \"\"\"Activate the given input based on activation function name\n",
    "    \n",
    "      Args:\n",
    "        z: input tensor of shape (B, Ni)\n",
    "        funcName: string of supported activation function name\n",
    "      Returns:\n",
    "        tensor of shape (B, Ni) after applied activation function\n",
    "    \"\"\"\n",
    "    supported_funcs = {\n",
    "      \"relu\": NN.relu,\n",
    "      \"sigmoid\": NN.sigmoid,\n",
    "      \"linear\": lambda x: x\n",
    "    }\n",
    "\n",
    "    if funcName not in supported_funcs:\n",
    "      raise Exception(\"Unsupported function\")\n",
    "\n",
    "    return supported_funcs[funcName](z)\n",
    "    \n",
    "  def forward(x, model):\n",
    "    \"\"\"Performs forward pass of training step.\n",
    "\n",
    "      Args:\n",
    "        x: input tensor of shape (B, Ni)\n",
    "        model: list of model weights (see initialize weights)\n",
    "      Returns:\n",
    "        List containing dictionary { \"y\": y, \"z\": z } for each layer of network.\n",
    "    \"\"\"     \n",
    "\n",
    "    # Add input as first layer, which will be consumed in backward\n",
    "    layer_output = [{\"z\": x, \"y\": x}]\n",
    "\n",
    "    for w, b, activation_func in model:\n",
    "      y_prev = layer_output[-1][\"y\"]\n",
    "      \n",
    "      z = np.dot(y_prev, w) + b\n",
    "      y = NN.activate(z, activation_func)\n",
    "      \n",
    "      layer_output.append({\"z\": z, \"y\": y})\n",
    "\n",
    "    return layer_output\n",
    "    \n",
    "  def predict(x, model):\n",
    "    \"\"\"Predicts the output of a model.\n",
    "\n",
    "      Args:\n",
    "        x: input tensor of shape (B, Ni)\n",
    "        model: list of model weights (see initialize weights)\n",
    "      Returns:\n",
    "        Prediction of model, with the same shape as the labeled data (B, No).\n",
    "    \"\"\"\n",
    "    fwd = forward(x, model)\n",
    "    return fwd[-1][\"y\"]\n",
    "    \n",
    "  def mse(y, p):\n",
    "    \"\"\"Computes Mean-Square Error between y and p.\n",
    "      Args:\n",
    "        y: labeled data of size (B, No) \n",
    "        p: predicted label of size (B, No)\n",
    "      Returns:\n",
    "        MSE of y-p\n",
    "    \"\"\"\n",
    "    return np.mean(np.square(y-p))\n",
    "\n",
    "  def mse_derivative(y, p):\n",
    "    \"\"\"Computes derivative of Mean-Square Error between y and p.\n",
    "      Args:\n",
    "        y: labeled data of size (B, No) \n",
    "        p: predicted label of size (B, No)\n",
    "      Returns:\n",
    "        derivative of MSE = y-p\n",
    "    \"\"\"\n",
    "    return p-y\n",
    "    \n",
    "  def binary_crossentropy(y, p):\n",
    "    \"\"\"Computes binary crossentropy between y and p.\n",
    "      Args:\n",
    "        y: labeled data of size (B, No) \n",
    "        p: predicted label of size (B, No)\n",
    "      Returns:\n",
    "        BCE of (y, p) = mean(sum(y log(p) + (1-y) log(1-p))) \n",
    "    \"\"\"\n",
    "    \n",
    "    return -np.mean(y * np.ma.log(p) + (1-y) * np.ma.log(1-p))\n",
    "\n",
    "  def binary_crossentropy_derivative(y, p):\n",
    "    \"\"\"Computes derivative of binary crossentropy between y and p.\n",
    "      Args:\n",
    "        y: labeled data of size (B, No) \n",
    "        p: predicted label of size (B, No)\n",
    "      Returns:\n",
    "        derivative of BCE of (y, p) = -[y / p - (1-y) / (1-p)]\n",
    "    \"\"\"\n",
    "    return -((y / p) - np.divide(1-y, 1-p))\n",
    "    \n",
    "  def get_cost(y, p, funcName, is_last_layer_error=False):\n",
    "    \"\"\"Calculate lost based on cost function name.\n",
    "    \n",
    "      Args:\n",
    "        y: input tensor of shape (B, Ni)\n",
    "        p: label vector of shape (B, 1)\n",
    "        funcName: string of supported lost function name\n",
    "      Returns:\n",
    "        tensor of shape (B, Ni) after applied cost function\n",
    "    \"\"\"\n",
    "    supported_cost_funcs = {\n",
    "      \"mse\": NN.mse,\n",
    "      \"binary_crossentropy\": NN.binary_crossentropy,\n",
    "    }\n",
    "      \n",
    "    supported_cost_funcs_derivative = {\n",
    "      \"mse\": NN.mse_derivative,\n",
    "      \"binary_crossentropy\": NN.binary_crossentropy_derivative,\n",
    "    }\n",
    "\n",
    "    # Should also appear in supported_cost_funcs_derivative \n",
    "    if funcName not in supported_cost_funcs:\n",
    "      raise Exception(\"Unsupported function\")\n",
    "\n",
    "    func = supported_cost_funcs_derivative if is_last_layer_error else supported_cost_funcs\n",
    "\n",
    "    return func[funcName](y, p)\n",
    "\n",
    "  def get_activation_derivative(z, funcName):\n",
    "    \"\"\"Computes derivative of activation function for computing dZ.\n",
    "      Args:\n",
    "        z: input tensor of shape (B, Ni)\n",
    "        funcName: string of supported activation function name\n",
    "      Returns:\n",
    "        derivative of activation function\n",
    "    \"\"\"\n",
    "    supported_funcs = {\n",
    "      \"relu\": NN.relu_derivative,\n",
    "      \"sigmoid\": NN.sigmoid_derivative,\n",
    "      \"linear\": lambda _: 1\n",
    "    }\n",
    "\n",
    "    if funcName not in supported_funcs:\n",
    "      raise Exception(\"Unsupported function\")\n",
    "\n",
    "    return supported_funcs[funcName](z)\n",
    "\n",
    "  def backward(y, x, models, loss):\n",
    "    \"\"\"Computes backward step of training.\n",
    "      Args:\n",
    "        y: labeled data of size (B, No) \n",
    "        x: input tensor of shape (B, Ni)\n",
    "        model: list of model weights (see initialize weights)\n",
    "        loss: one of (\"mse\", \"binary_crossentropy\")\n",
    "      Returns:\n",
    "        tuple with loss evaluation of (y, predict(x)) and list of dictionary\n",
    "        containing { \"dw\": dw, \"db\": db } for each layer of network. Remember\n",
    "        that shape of dw for each layer should be equal to shape of weight for\n",
    "        the same layer.\n",
    "    \"\"\"\n",
    "    y_predicted = x[-1][\"y\"]\n",
    "    y = y.reshape(y_predicted.shape)\n",
    "    b = y.shape[0] # number of training data\n",
    "\n",
    "    cost = NN.get_cost(y, y_predicted, loss)\n",
    "    weights = []\n",
    "\n",
    "    dY_prev = NN.get_cost(y, y_predicted, loss, is_last_layer_error=True)\n",
    "\n",
    "    for i, model in reversed(list(enumerate(models))):\n",
    "      dY_curr = dY_prev\n",
    "\n",
    "      Y_prev = x[i][\"y\"]\n",
    "      Z_curr = x[i + 1][\"z\"]\n",
    "      W_curr, _, activation_func = model\n",
    "      \n",
    "      dZ_curr = get_activation_derivative(Z_curr, activation_func) * dY_curr\n",
    "      dW_curr = np.dot(Y_prev.T, dZ_curr) / b\n",
    "      db_curr = np.sum(dZ_curr, axis=0, keepdims=True) / b\n",
    "      dY_prev = np.dot(dZ_curr, W_curr.T)\n",
    "\n",
    "      weights.insert(0, {\"dw\": dW_curr, \"db\": db_curr})\n",
    "\n",
    "    return (cost, weights)\n",
    "    \n",
    "  def update(weights, dweights, alpha):\n",
    "    \"\"\"Gradient descent for weights and biases.\"\"\"\n",
    "    for i in range(len(weights)):\n",
    "      weights[i][0] += - alpha * dweights[i][\"dw\"]\n",
    "      weights[i][1] += - alpha * dweights[i][\"db\"]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- New Trainings using mnist and previous neural network"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "\n",
    "from keras.datasets import mnist\n",
    "from keras.utils import to_categorical\n",
    "from sklearn.preprocessing import normalize\n",
    "\n",
    "(x_train, y_train), (x_test, y_test) = mnist.load_data()\n",
    "\n",
    "x_train = x_train.reshape(x_train.shape[0], 784).astype(np.float32)\n",
    "x_test = x_test.reshape(x_test.shape[0], 784).astype(np.float32)\n",
    "\n",
    "y_train = to_categorical(y_train, 10).astype(np.float32)\n",
    "y_test = to_categorical(y_test, 10).astype(np.float32)\n",
    "\n",
    "x_train = normalize(x_train, norm='max', axis=0)\n",
    "x_test = normalize(x_test, norm='max', axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [],
   "source": [
    "outputs = [\"sigmoid\"]\n",
    "shapes = [x_train.shape[1], y_train.shape[1]]\n",
    "\n",
    "model = NN.initialize_weights(shapes, outputs)\n",
    "model_memo = np.copy(model)\n",
    "\n",
    "labels = np.argmax(y_train, axis=1)\n",
    "\n",
    "fwd_results = NN.forward(x_train, model)\n",
    "y_predicted = fwd_results[-1][\"y\"]\n",
    "y = y_train.reshape(y_predicted.shape)\n",
    "\n",
    "\n",
    "def F(model):\n",
    "  yy = NN.forward(x_train, model)\n",
    "  return yy[-1][\"y\"]\n",
    "\n",
    "# definition of loss function\n",
    "def L(model):\n",
    "  return NN.get_cost(y, F(model), \"binary_crossentropy\")\n",
    "\n",
    "# definition of gradient\n",
    "def g(model):\n",
    "  return F(model) - y\n",
    "\n",
    "def update(model, delta_theta):\n",
    "  for i in range(len(model)):\n",
    "    model[i][0] += delta_theta[i]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 177,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = np.copy(model_memo)\n",
    "model, history, accuracy = GD(model, alpha=0.0002, verbose=False)\n",
    "plt.cla()\n",
    "plt.title('Loss over time')\n",
    "plt.plot(history)\n",
    "plt.show()\n",
    "plt.title('Accuracy over time')\n",
    "plt.plot(accuracy)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 178,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = np.copy(model_memo)\n",
    "model, history, accuracy = Momentum(model, alpha=0.0002, beta=0.9, verbose=False)\n",
    "plt.cla()\n",
    "plt.title('Loss over time')\n",
    "plt.plot(history)\n",
    "plt.show()\n",
    "plt.title('Accuracy over time')\n",
    "plt.plot(accuracy)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 235,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "MAX_ITERATIONS = 10\n",
    "\n",
    "model = np.copy(model_memo)\n",
    "model, history, accuracy = Adadelta(model, verbose=False)\n",
    "plt.cla()\n",
    "plt.title('Loss over time')\n",
    "plt.plot(history)\n",
    "plt.show()\n",
    "plt.title('Accuracy over time')\n",
    "plt.plot(accuracy)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 236,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = np.copy(model_memo)\n",
    "model, history, accuracy = Adam(model, alpha=2e-3, verbose=False)\n",
    "plt.cla()\n",
    "plt.title('Loss over time')\n",
    "plt.plot(history)\n",
    "plt.show()\n",
    "plt.title('Accuracy over time')\n",
    "plt.plot(accuracy)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 237,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "model = np.copy(model_memo)\n",
    "model, history, accuracy = AdamWithWarmup(model, alpha=2e-5, verbose=False)\n",
    "plt.cla()\n",
    "plt.title('Loss over time')\n",
    "plt.plot(history)\n",
    "plt.show()\n",
    "plt.title('Accuracy over time')\n",
    "plt.plot(accuracy)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
